--TABLE--
CREATE TABLE CITY(
    POSTCODE NUMBER(5) PRIMARY KEY,
    CITY_NAME VARCHAR2(20) NOT NULL,
    CITY_STATE VARCHAR2(20) NOT NULL
);

--WAREHOUSE--
CREATE TABLE WAREHOUSE(
    WHS_ID CHAR(5) PRIMARY KEY,
    WHS_NAME VARCHAR2(20) NOT NULL,
    WHS_ADDR VARCHAR2(100) NOT NULL,
    WHS_OPEN TIMESTAMP NOT NULL,
    WHS_CLOSE TIMESTAMP NOT NULL,
    POSTCODE NUMBER(5,0) NOT NULL,
    FOREIGN KEY (POSTCODE) REFERENCES CITY(POSTCODE)
);

--SECTION--
CREATE TABLE SECTION(
    SECT_ID CHAR(5) PRIMARY KEY,
    SECT_NAME VARCHAR2(20) NOT NULL,
    SECT_FLOOR NUMBER(2,0) NOT NULL,
    SECT_DATE_CHECK DATE NOT NULL,
    WHS_ID CHAR(5) NOT NULL,
    FOREIGN KEY (WHS_ID) REFERENCES WAREHOUSE(WHS_ID)
);

--EMPLOYEE--
CREATE TABLE EMPLOYEE(
    EMP_ID CHAR(5) PRIMARY KEY,
    EMP_PW VARCHAR2(12) NOT NULL,
    EMP_TIN VARCHAR(13) NOT NULL,
    EMP_IC CHAR(14) NOT NULL,
    EMP_FNAME VARCHAR2(20) NOT NULL,
    EMP_LNAME VARCHAR2(20) NOT NULL,
    EMP_ROLE VARCHAR2(20) NOT NULL,
    EMP_TITLE VARCHAR2(10) NOT NULL,
    EMP_BDATE DATE NOT NULL,
    EMP_PHONE VARCHAR2(13) NOT NULL,
    EMP_EMAIL VARCHAR2(20) NOT NULL,
    WHS_ID CHAR(5) NOT NULL,
    FOREIGN KEY (WHS_ID) REFERENCES WAREHOUSE(WHS_ID)
);

--PRODUCT--
CREATE TABLE PRODUCT(
    PROD_ID CHAR(6) PRIMARY KEY,
    PROD_NAME VARCHAR2(20) NOT NULL,
    PROD_DESC VARCHAR2(100) NOT NULL,
    PROD_UOM VARCHAR2(8) NOT NULL,
    PROD_UNIT_PRICE NUMBER(8,2) NOT NULL
);

--PRODUCT_INVENTORY--
CREATE TABLE PRODUCT_INVENTORY(
    --COMPOSITE PRIMARY KEY REFERENCES TWO TABLES
    PROD_ID CHAR(6) NOT NULL,
    SECT_ID CHAR(6) NOT NULL,
    PRIMARY KEY(PROD_ID, SECT_ID),
    FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID),
    FOREIGN KEY (SECT_ID) REFERENCES SECTION(SECT_ID),
    QTY NUMBER(10,0) NOT NULL
);

COMMIT;

--COMPANY--
CREATE TABLE COMPANY(
    COM_ID CHAR(5) PRIMARY KEY,
    COM_NAME VARCHAR2(20) NOT NULL,
    COM_CATEGORY VARCHAR2(20) NOT NULL,
    COM_ADDR VARCHAR2(100) NOT NULL,
    COM_PIC_FNAME VARCHAR2(20) NOT NULL,
    COM_PIC_LNAME VARCHAR2(20) NOT NULL,
    COM_PIC_TITLE VARCHAR2(20) NOT NULL,
    COM_PHONE VARCHAR2(13) NOT NULL,
    COM_EMAIL VARCHAR2(20) NOT NULL,
    POSTCODE NUMBER(5) NOT NULL,
    FOREIGN KEY (POSTCODE) REFERENCES CITY(POSTCODE)
);

--SHIPPING_DESTINATION--
CREATE TABLE SHIPPING_DESTINATION(
    SHIPD_ID CHAR(8) PRIMARY KEY,
    SHIPD_NAME VARCHAR2(30) NOT NULL,
    SHIPD_ADDR VARCHAR2(100) NOT NULL,
    COM_ID CHAR(5) NOT NULL,
    POSTCODE NUMBER(5) NOT NULL,
    FOREIGN KEY (COM_ID) REFERENCES COMPANY(COM_ID),
    FOREIGN KEY (POSTCODE) REFERENCES CITY(POSTCODE)
);

--LOGISTIC_PROVIDER--
CREATE TABLE LOGISTIC_PROVIDER(
    LOG_ID CHAR(6) PRIMARY KEY,
    LOG_NAME VARCHAR2(20) NOT NULL,
    LOG_PIC_FNAME VARCHAR2(20) NOT NULL,
    LOG_PIC_LNAME VARCHAR2(20) NOT NULL,
    LOG_PIC_TITLE VARCHAR2(10) NOT NULL,
    LOG_PHONE VARCHAR2(13) NOT NULL,
    LOG_EMAIL VARCHAR2(20) NOT NULL,
    LOG_OPEN TIMESTAMP NOT NULL,
    LOG_CLOSE TIMESTAMP NOT NULL
);

--DRIVER--
CREATE TABLE DRIVER (
    DRIVER_ID CHAR(6) PRIMARY KEY,
    DRIVER_LISENCE_NO CHAR(10) NOT NULL,
    DRIVER_FNAME VARCHAR2(20) NOT NULL,
    DRIVER_LNAME VARCHAR2(20) NOT NULL,
    DRIVER_TITLE VARCHAR2(10) NOT NULL,
    DRIVER_BDATE DATE NOT NULL,
    DRIVER_PHONE VARCHAR2(13) NOT NULL,
    DRIVER_AVAILABILITY CHAR(1) NOT NULL,
    LOG_ID CHAR(6) NOT NULL,
    FOREIGN KEY (LOG_ID) REFERENCES LOGISTIC_PROVIDER(LOG_ID)
);

--ORDERS--
CREATE TABLE ORDERS (
    ORD_ID CHAR(11) PRIMARY KEY NOT NULL,
    ORD_DEALING_DATE DATE NOT NULL,
    ORD_RECIPENT_FNAME VARCHAR2(20) NOT NULL,
    ORD_RECIPENT_LNAME VARCHAR2(20) NOT NULL,
    ORD_RECIPENT_PHONE VARCHAR2(13) NOT NULL,
    ORD_STATUS CHAR(3) NOT NULL,
    SHIPD_ID CHAR(8) NOT NULL,
    DRIVER_ID CHAR(6) NOT NULL,
    FOREIGN KEY (SHIPD_ID) REFERENCES SHIPPING_DESTINATION(SHIPD_ID),
    FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER(DRIVER_ID)
);

--ORDER_PRODUCT--
CREATE TABLE ORDER_PRODUCT(
    ORD_ID CHAR(11) NOT NULL,
    PROD_ID CHAR(6) NOT NULL,
    PRIMARY KEY (ORD_ID, PROD_ID),
    FOREIGN KEY (ORD_ID) REFERENCES ORDERS(ORD_ID),
    FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID),
    QTY INTEGER NOT NULL
);

COMMIT;


--INVOICE--
CREATE TABLE INVOICE(
    INV_ID CHAR(6) PRIMARY KEY,
    INV_DATE DATE NOT NULL,
    INV_DESC VARCHAR2(100),
    INV_REMARKS VARCHAR2(100),
    INV_AMOUNT NUMBER(10,2) NOT NULL,
    INV_PAY_TERM NUMBER(3,0) NOT NULL,
    ORD_ID CHAR(6) NOT NULL,
    FOREIGN KEY (ORD_ID) REFERENCES ORDERS(ORD_ID)
);

--PAYMENT--
CREATE TABLE PAYMENT(
    PAY_ID CHAR(6) PRIMARY KEY,
    PAY_DATE DATE NOT NULL,
    PAY_METHOD VARCHAR2(4) NOT NULL,
    INV_ID CHAR(6) NOT NULL,
    FOREIGN KEY (INV_ID) REFERENCES INVOICE(INV_ID)
);


--FEEDBACKS--
CREATE TABLE FEEDBACKS(
    FBK_ID CHAR(8) PRIMARY KEY,
    FBK_RATING NUMBER(1,0) NOT NULL,
    FBK_DESC VARCHAR2(100),
    FBK_DATE DATE NOT NULL,
    ORD_ID CHAR(6) NOT NULL,
    FOREIGN KEY (ORD_ID) REFERENCES ORDERS(ORD_ID)
);

--RECYCLE_ORDER--

CREATE TABLE RECYCLE_ORDER(
    RORD_ID CHAR(6) PRIMARY KEY,
    RORD_DEALING_DATE DATE NOT NULL,
    RORD_DELIVERY_DATE DATE NOT NULL,
    RORD_STATE CHAR(3) NOT NULL,
    COM_ID CHAR(5) NOT NULL,
    FOREIGN KEY (COM_ID) REFERENCES COMPANY(COM_ID)
);

--RECYCLED_ITEM
CREATE TABLE RECYCLED_ITEM(
    RITEM_ID CHAR(6) PRIMARY KEY,
    RITEM_CONDITION NUMBER(1) NOT NULL,
    RITEM_QC_DATE DATE NOT NULL,
    RITEM_QTY NUMBER(10,2) NOT NULL,
    RORD_ID CHAR(6) NOT NULL,
    PROD_ID CHAR(6) NOT NULL,
    FOREIGN KEY (RORD_ID) REFERENCES RECYCLE_ORDER(RORD_ID),
    FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID)
);

--RETURNED HISTORY TABLE--

CREATE TABLE RETURNED_HISTORY(
    RHS_ID CHAR(6) PRIMARY KEY,
    RETURNED_DATE DATE NOT NULL,
    RHIS_STAT CHAR(3) NOT NULL,
    EMP_ID CHAR(5) NOT NULL,
    RITEM_ID CHAR(6) NOT NULL,
    FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID),
    FOREIGN KEY (RITEM_ID) REFERENCES RECYCLED_ITEM(RITEM_ID)
);

--RECYCLE_TRANSACTION--

CREATE TABLE RECYCLE_TRANSACTION(
    RTRANS_ID CHAR(6) PRIMARY KEY,
    RTRANS_AMOUNT NUMBER(10,2) NOT NULL,
    RTRANS_PAY_METHOD VARCHAR(4) NOT NULL,
    RTRANS_DATE DATE NOT NULL,
    RORD_ID CHAR(6) NOT NULL,
    FOREIGN KEY (RORD_ID) REFERENCES RECYCLE_ORDER(RORD_ID)
);


